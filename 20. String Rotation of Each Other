class Solution {
    // Function to check if two strings are rotations of each other or not.
    public static boolean areRotations(String s1, String s2) {
        if(s1.length() != s2.length()){
            return false;
        }
        
        String concat = s1 + s1;
        
        
        return kmp(concat,s2);
        
    }
    private static boolean kmp(String text, String pat){
        int n = text.length();
        int m = pat.length();
        int[] lps= buildlps(pat);
        int i=0,j=0;
        while(i<n){
            if(text.charAt(i)==pat.charAt(j)){
                i++;
                j++;
            }
            if(j==m){
                return true;
            }
            else if(i<n && text.charAt(i)!= pat.charAt(j)){
                if(j!=0){
                    j = lps[j-1];
                }
                else{
                    i++;
                }
            }
        }
        return false;
    }
    
    private static int[] buildlps(String pat){
        int m = pat.length();
        int[] lps = new int[m];
        
        int len =0;
        int i=1;
        
        while(i<m){
            if(pat.charAt(i)==pat.charAt(len)){
                len++;
                lps[i] = len;
                i++;
            }
            else{
                if(len!=0){
                    len = lps[len-1];
                }
                else{
                    lps[i] = 0;
                    i++;
                }
            }
        }
        return lps;
    }
}
